{"version":3,"sources":["API/index.js","actions/bookings.action.js","thunk/rooms.thunk.js","actions/rooms.actions.js","thunk/visitors.thunk.js","actions/visitors.actions.js","thunk/booking.thunk.js","components/spinner/spinner.js","screens/Rooms/RoomsStatus.jsx","components/input/input.js","components/Button/Button.js","constant/constant.js","screens/Rooms/CreateRooms.jsx","screens/Rooms/RoomTable.jsx","screens/Rooms/Rooms.jsx","screens/Nav/nav.jsx","components/Select/Select.js","screens/Bookings/CreateBook.jsx","screens/Bookings/BooksTable.jsx","screens/Bookings/Bookings.jsx","screens/Visitors/CreateVisitor.jsx","screens/Visitors/Visitors.table.jsx","screens/Visitors/Vositors.jsx","App.js","reducers/rooms.reduce.js","reducers/visitors.reducer.js","reducers/bookings.reducer.js","reducers/index.js","store/store.js","index.js"],"names":["axiosInstance","axios","create","baseURL","responseType","Endpoint","EndpointFactory","rooms","roomsStatus","bookings","visitors","putBooking","id","postBookingSuccsess","data","type","payload","getRoomsThunk","dispatch","a","async","api","get","response","status","Error","console","log","getVisitorsThunk","getBookingThunk","Spiner","class","connect","roomsPage","loading","gettingStatus","getStatus","booking","useEffect","className","Input","name","span","value","disabled","onChange","checked","Button","myClassName","onClick","roomsDataExample","balcony","floor","beds","roomId","personDataExample","personName","personId","cardNumber","createdDate","roomsData","handleRooms","event","target","createRooms","postRooms","post","postRoomsThunk","udpateRooms","put","updateRoomsThunk","getRooms","resetRoomsInput","resetRooms","handleInputs","e","update","removeRooms","delete","res","removeRoomsThunk","updateRooms","map","i","key","bookedAt","Rooms","Nav","src","to","Select","title","rest","htmlFor","bookingPage","visitorsPage","bookingData","handleBooking","person","selPerson","find","v","createBookings","postBookings","postBookingThunk","udpateBooks","updateBookingThunk","getBooking","getVisitors","roomNumber","handleBooks","removeBookings","deleteBookingThunk","updateBookings","Bookings","CreateBook","personData","handleVisitors","createVisitors","postVisitors","postVisitorsThunk","udpateVisitors","updateVisitorsThunk","resetVisitorsInput","resetViisitors","React","memo","removeVisitor","removeVisitorsThunk","updatedVisitors","updateVisitors","Visitors","CreateVisitor","App","path","render","initialState","Date","toLocaleDateString","initalState","getBookingStatus","postBookingStatus","combineReducers","state","action","newRooms","filter","el","findEvent","newVisitors","postBooking","newBookings","middleware","thunk","store","createStore","reducer","compose","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e69e3b44.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport EndpointFactory from \"axios-endpoints\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: \"https://it-blog-posts.herokuapp.com/api/\",\r\n  responseType: \"json\"\r\n});\r\n\r\nconst Endpoint = EndpointFactory(axiosInstance);\r\nexport default {\r\n  rooms       : new Endpoint(\"rooms\"),\r\n  roomsStatus : new Endpoint(\"rooms/status\"),\r\n  bookings    : new Endpoint(\"roomBookings\"),\r\n  visitors    : new Endpoint(\"visitors\"),\r\n  putBooking     :(id)=> new Endpoint(\"roomBookings/\" + id),\r\n}","export const getBookingSuccess = (data) => ({\r\n    type: 'GET_BOOKING_SUCCSESS',\r\n    payload: data\r\n  })\r\n  \r\n  export const getBookingFailure = () => ({\r\n    type: 'GET_BOOKING_FAILURE'\r\n  })\r\n  export const postBookingSuccsess = (data) => ({\r\n    type: 'POST_BOOKING_SUCCSESS',\r\n    payload: data\r\n  })\r\n  \r\n  export const postBookingFailure = () => ({\r\n    type: 'POST_BOOKING_FAILURE'\r\n  })\r\n\r\n  export const updateBookings = (id) =>{\r\n    return {\r\n        type : \"UPDATE_BOOKINGS\",\r\n        payload :id\r\n    }\r\n}\r\n\r\nexport const createBookings = (event,data,person) =>{\r\n    const { target: { name, value } } = event;\r\n    if (name === \"personName\") {\r\n        const selPerson = person.find(v => v.personName === value);\r\n    return{\r\n        type : \"CREATE_BOOKINGS\",\r\n        payload : {...data, [name]:  value, personId: selPerson.personId}\r\n    }\r\n} else{\r\n   return {\r\n    type : \"CREATE_BOOKINGS\",\r\n    payload : {...data, [name]:  value, }\r\n   }\r\n}\r\n}\r\n\r\n\r\n  export const removeBookings = (data) =>{\r\n    return{\r\n        type : \"REMOVE_ROOMS\",\r\n        payload : data\r\n    }\r\n}\r\n\r\n","import api from '../API';\r\nimport axios from \"axios\";\r\nimport { getStatusRequest, getStatusSuccess, getStatusFailure,getRooms,removeRooms } from '../actions';\r\n\r\nexport const getStatusThunk = () => async (dispatch) => {\r\n  try {\r\n    dispatch(getStatusRequest());\r\n    const response = await api.roomsStatus.get();\r\n    if (response.status !== 200) {\r\n      throw new Error('Cannot get status')\r\n    }\r\n    dispatch(getStatusSuccess(response.data.status));\r\n  } catch (error) {\r\n      console.log(Error)\r\n    dispatch(getStatusFailure());\r\n  }\r\n}\r\n\r\nexport const getRoomsThunk = () =>  async(dispatch) =>{\r\n  try {\r\n    const response = await api.rooms.get();\r\n    if (response.status !== 200) {\r\n      throw new Error('Cannot get status')\r\n    }\r\n    dispatch(getRooms(response.data));\r\n  } catch (error) {\r\n      console.log(Error)\r\n    dispatch(getStatusFailure());\r\n  }\r\n}\r\n\r\nexport const postRoomsThunk = (data) => async (dispatch) => {\r\n  try {\r\n    const response = await api.rooms.post({...data});\r\n    if (response.status !== 200) {\r\n      throw new Error('Cannot get rooms')\r\n    }\r\n  } catch (error) {\r\n      console.log(Error)\r\n  }\r\n}\r\n\r\n\r\nexport const removeRoomsThunk = (id) => async (dispatch) =>{\r\n  try {\r\n      const res = await axios.delete(`https://it-blog-posts.herokuapp.com/api/rooms/${id}`)\r\n      console.log(res.status)\r\n      if (res.status !== 200) {\r\n        throw new Error('Cannot get rooms')\r\n      }\r\n      dispatch(removeRooms(id))\r\n    } catch (error) {\r\n        console.log(Error)\r\n    }\r\n}\r\n\r\nexport const updateRoomsThunk = (id,data) => async (dispatch) => {\r\n  try {\r\n      const response = await axios.put(`https://it-blog-posts.herokuapp.com/api/rooms/${id}`,{...data})\r\n    if (response.status !== 200) {\r\n      throw new Error('Cannot get visitors')\r\n    }\r\n  } catch (error) {\r\n      console.log(Error)\r\n  }\r\n}","export const getStatusRequest = () => ({\r\n    type: 'GET_STATUS_REQUEST'\r\n  })\r\n  export const getStatusSuccess = (data) => ({\r\n    type: 'GET_STATUS_SUCCESS',\r\n    payload: data\r\n  })\r\n  export const getStatusFailure = () => ({\r\n    type: 'GET_STATUS_FAILURE'\r\n  })\r\n\r\n  export const getRooms = (data) =>{\r\n    return{\r\n      type : \"GET_ROOMS\",\r\n      payload : data\r\n    }\r\n  }\r\n\r\n  export const createRooms = (event,data) =>{\r\n    const { target: { name, value,checked } } = event;\r\n    return{\r\n        type : \"CREATE_ROOMS\",\r\n        payload : {...data, [name]: name === 'balcony' ? !!checked : value}\r\n    }\r\n}\r\n\r\n\r\n  export const removeRooms = (data) =>{\r\n    return{\r\n        type : \"REMOVE_ROOMS\",\r\n        payload : data\r\n    }\r\n}\r\n\r\nexport const updateRooms = (id) =>{\r\n    return {\r\n        type : \"UPDATE_ROOMS\",\r\n        payload :id\r\n    }\r\n}\r\n\r\nexport const resetRooms = (data) =>{\r\n  return {\r\n      type : \"RESET_ROOMS\",\r\n      payload : data\r\n  }\r\n}\r\n\r\n","import api from '../API';\r\nimport axios from \"axios\";\r\nimport {  getVisitors,updateVisitors,removeVisitors } from '../actions';\r\n\r\n\r\nexport const getVisitorsThunk = () => async (dispatch) => {\r\n  try {\r\n    const response = await api.visitors.get();\r\n    if (response.status !== 200) {\r\n      throw new Error('Cannot get visitors')\r\n    }\r\n    dispatch(getVisitors(response.data));\r\n  } catch (error) {\r\n      console.log(Error)\r\n  }\r\n}\r\n\r\nexport const postVisitorsThunk = (data) => async (dispatch) => {\r\n    try {\r\n      const response = await api.visitors.post({...data});\r\n      if (response.status !== 200) {\r\n        throw new Error('Cannot get visitors')\r\n      }\r\n    } catch (error) {\r\n        console.log(Error)\r\n    }\r\n  }\r\n\r\n  export const removeVisitorsThunk = (id) => async (dispatch) =>{\r\n    try {\r\n        const res = await axios.delete(`https://it-blog-posts.herokuapp.com/api/visitors/${id}`)\r\n        if (res.status !== 200) {\r\n          throw new Error('Cannot get visitors')\r\n        }\r\n        dispatch(removeVisitors(id))\r\n      } catch (error) {\r\n          console.log(Error)\r\n      }\r\n  }\r\n\r\n  export const updateVisitorsThunk = (id,data) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.put(`https://it-blog-posts.herokuapp.com/api/visitors/${id}`,{...data})\r\n      if (response.status !== 200) {\r\n        throw new Error('Cannot get visitors')\r\n      }\r\n    } catch (error) {\r\n        console.log(Error)\r\n    }\r\n  }","export const createVisitors = (event,data) =>{\r\n    const { target: { name, value } } = event;\r\n    return{\r\n        type : \"CREATE_VISITORS\",\r\n        payload : {...data,[name] : value}\r\n    }\r\n}\r\n\r\nexport const getVisitors = (data) =>{\r\n    return{\r\n        type : \"GET_VISITORS\",\r\n        payload : data\r\n    }\r\n}\r\n\r\nexport const removeVisitors = (data) =>{\r\n    return{\r\n        type : \"REMOVE_VISITORS\",\r\n        payload : data\r\n    }\r\n}\r\n\r\nexport const updateVisitors = (id) =>{\r\n    return {\r\n        type : \"UPDATE_VISITORS\",\r\n        payload :id\r\n    }\r\n}\r\n\r\nexport const resetViisitors = (data) =>{\r\n    return {\r\n        type : \"RESET_VISITORS\",\r\n        payload : data\r\n    }\r\n  }\r\n\r\n","import api from '../API';\r\nimport { getBookingSuccess,getBookingFailure,postBookingFailure,postBookingSuccsess } from '../actions';\r\n\r\nexport const getBookingThunk = () => async (dispatch) => {\r\n    try {\r\n      \r\n      const response = await api.bookings.get();\r\n      if (response.status !== 200) {\r\n        throw new Error('Cannot get rooms')\r\n      }\r\n      dispatch(getBookingSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(getBookingFailure());\r\n    }\r\n  }\r\n  export const postBookingThunk = (data) => async (dispatch) => {\r\n    try {\r\n      \r\n      const response = await api.bookings.post(data);\r\n      if (response.status !== 200) {\r\n        throw new Error('Cannot post room')\r\n      }\r\n      dispatch(postBookingSuccsess(response));\r\n    } catch (error) {\r\n      dispatch(postBookingFailure());\r\n    }\r\n  }\r\n  export const updateBookingThunk = (data,id) => async (dispatch) => {\r\n    try {\r\n    \r\n      const response = await api.putBooking(id).put(data);\r\n      \r\n      if (response.status !== 200) {\r\n        throw new Error('Cannot post room')\r\n      }\r\n      dispatch(postBookingSuccsess(response));\r\n    } catch (error) {\r\n      dispatch(postBookingFailure());\r\n    }\r\n  }\r\n  \r\n  export const deleteBookingThunk = (id) => async (dispatch) => {\r\n    try {\r\n    \r\n      const response = await api.putBooking(id).delete();\r\n      \r\n      if (response.status !== 200) {\r\n        throw new Error('Cannot post room')\r\n      }\r\n      dispatch(postBookingSuccsess(response));\r\n    \r\n    } catch (error) {\r\n      dispatch(postBookingFailure());\r\n    }\r\n  }","import React from 'react';\r\nimport './spiner.css'\r\n\r\n\r\nconst Spiner = () =>{\r\n    return(\r\n        <div class=\"loader\">Loading...</div>\r\n    )\r\n}\r\n\r\nexport default Spiner;\r\n","import React,{useEffect,Fragment} from 'react';\r\nimport {getStatusThunk} from '../../thunk/';\r\nimport {connect} from 'react-redux';\r\nimport Spiner from '../../components/spinner/spinner'\r\n\r\n\r\nconst RoomsStatus = ({roomsStatus,getStatus,loading})=>{\r\nconst {rooms,booking,visitors} = roomsStatus;\r\n\r\nuseEffect(()=>{\r\n    getStatus()\r\n  },[])\r\n    \r\n    return(\r\n      <div className=\"status\">\r\n         {loading ? <Spiner/> :<Fragment>\r\n         <div>\r\n              <p> {rooms} </p>\r\n              <p>Rooms</p>\r\n          </div>\r\n          <div>\r\n              <p> {booking} </p>\r\n              <p>Bookings</p>\r\n          </div>\r\n          <div>\r\n              <p>  {visitors} </p>\r\n              <p>Visitors</p>\r\n          </div></Fragment>}\r\n      </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({roomsPage}) =>{\r\n    return {\r\n        roomsStatus : roomsPage.status,\r\n        loading : roomsPage.gettingStatus\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n      return {\r\n         getStatus: () => {\r\n             dispatch(getStatusThunk())\r\n         }\r\n      }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(RoomsStatus);","import React from 'react';\r\nimport './input.style.css'\r\n\r\nconst Input = ({name,span,value,disabled,type,onChange,checked, className}) =>{\r\n    return (\r\n        <div className={className}>\r\n            <p>{span}</p>\r\n            <input type={type} value={value} name={name} disabled={disabled ? disabled : null} checked={checked ? checked : null} onChange={onChange} ></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport './button.style.css'\r\n\r\nconst Button = ({name,myClassName,onClick}) =>{\r\n    return(\r\n            <button className={myClassName} onClick={onClick}>{name} </button>\r\n    )\r\n}\r\n\r\nexport default Button;","export const  roomsDataExample = {\r\n    balcony : false,\r\n    floor : '',\r\n    beds : '',\r\n    roomId : '',\r\n  }\r\n\r\nexport const personDataExample ={\r\n    personName : '',\r\n    personId : '',\r\n    cardNumber : '',\r\n    createdDate : ''\r\n}","import React, { useEffect } from 'react';\r\nimport Input from '../../components/input';\r\nimport Button from '../../components/Button';\r\nimport {connect} from 'react-redux';\r\nimport {createRooms,resetRooms} from '../../actions'\r\nimport {postRoomsThunk,getRoomsThunk,updateRoomsThunk} from '../../thunk';\r\nimport {roomsDataExample} from '../../constant/constant'\r\n\r\nconst CreateRooms = ({handleRooms,postRooms,getRooms,roomsData,udpateRooms,resetRoomsInput}) =>{\r\n\r\n  const {floor,balcony, beds,roomId,id} = roomsData\r\n \r\n  \r\n  useEffect(()=>{\r\n    getRooms()\r\n  },[roomsData])\r\n\r\n  const handleInputs = (e) =>{\r\n    handleRooms(e,roomsData)\r\n }\r\n\r\n const handleSubmit = () =>{\r\n   postRooms(roomsData)\r\n   getRooms()\r\n   resetRoomsInput(roomsDataExample)\r\n }\r\n\r\n const update = (id,roomsData) =>{\r\n   udpateRooms(id,roomsData)\r\n   getRooms()\r\n   resetRoomsInput(roomsDataExample)\r\n }\r\n\r\n  \r\n    return (\r\n        <div className='create_room'>\r\n          <p>ADD NEW ROOM</p>\r\n          <div className=\"imput_rooms\">\r\n          <Input span={\"Floor\"} name=\"floor\" className={\"input_all\"} onChange={handleInputs} value={floor} />\r\n          <Input span={\"Beds\"} name=\"beds\" className={\"input_all\"} onChange={handleInputs} value={beds}/>\r\n          <Input span={\"Balcony\"} type='checkbox' className={\"input_checkbox\"} onChange={handleInputs}  name=\"balcony\" value={balcony} />\r\n          <Input span={\"Room Number\"} name=\"roomId\" className={\"input_all\"} onChange={handleInputs} value={roomId}  />\r\n          <Button name={id ? 'Update' : 'Create'}  myClassName={\"button_all\"} onClick={()=>{ return id ? update(id,roomsData) : handleSubmit() }}/>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({roomsPage}) =>{\r\n  return{\r\n     rooms : roomsPage.rooms,\r\n     roomsData : roomsPage.roomsData\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    \r\n      handleRooms : (event, roomsData) =>{\r\n          dispatch(createRooms(event,roomsData))\r\n      },\r\n      postRooms : (data) =>{\r\n          dispatch(postRoomsThunk(data))\r\n      },\r\n      udpateRooms : (id,data) =>{\r\n          dispatch(updateRoomsThunk(id,data))\r\n      },\r\n      getRooms : ()=>{\r\n        dispatch(getRoomsThunk())\r\n      },\r\n      resetRoomsInput : (data) =>{\r\n        dispatch(resetRooms(data))\r\n      }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateRooms);\r\n","import React,{useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {getRoomsThunk,removeRoomsThunk} from '../../thunk/';\r\nimport {updateRooms} from '../../actions'\r\nimport Button from '../../components/Button';\r\n\r\n\r\nconst RoomsTable = ({getRooms,rooms,removeRooms,updateRooms}) =>{\r\n\r\n  useEffect(()=>{\r\n    getRooms()\r\n  },[rooms])\r\n\r\n  const deleteRooms = (id)=>{\r\n    removeRooms(id)\r\n    getRooms()\r\n  }\r\n\r\n  const update =(id) =>{\r\n    updateRooms(id)\r\n  }\r\n\r\n    return(\r\n      <div className=\"room_info\">\r\n        <table>\r\n           <thead>\r\n           <tr>\r\n                <th>#ID</th>\r\n                <th>Booked</th>\r\n                <th>Beds</th>\r\n                <th>Balcony</th>\r\n                <th>Number</th>\r\n                <th>Edit</th>\r\n                <th>Delete</th>\r\n            </tr>\r\n           </thead>\r\n           <tbody>\r\n            {rooms.map((e,i)=>{\r\n              return <tr key={e.id}>\r\n                <td>{i+1}</td>\r\n                <td> {e.bookedAt} </td>\r\n                <td> {e.beds} </td>\r\n                <td> {e.balcony? 'Yes' : 'No'} </td>\r\n                <td> {e.roomId} </td> \r\n                 <td><Button name={'edit'} onClick={()=>update(e.id)} /></td>\r\n                <td><Button name={'delete'} onClick={()=>deleteRooms(e.id)} /></td>\r\n              </tr>\r\n            })}\r\n            </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({roomsPage}) =>{\r\n  return {\r\n      rooms : roomsPage.rooms\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n       getRooms: () => {\r\n           dispatch(getRoomsThunk())\r\n       },\r\n       removeRooms : (id) =>{\r\n        dispatch(removeRoomsThunk(id))\r\n    },\r\n    updateRooms : (id)=>{\r\n      dispatch(updateRooms(id))\r\n    }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(RoomsTable);\r\n","import React from 'react';\r\nimport RoomsStatus from './RoomsStatus';\r\nimport './rooms.style.css'\r\nimport CreateRooms from './CreateRooms';\r\nimport RoomsTable from './RoomTable';\r\n\r\n\r\n\r\nconst Rooms = () => {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"rooms_content\" >\r\n       <div className=\"rooms_main\">\r\n       <RoomsStatus/>\r\n       <CreateRooms/> \r\n       </div>\r\n      <div className=\"room_table\">\r\n      <RoomsTable/>\r\n      </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default Rooms;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './nav.style.css'\r\n\r\n\r\nconst Nav = () =>{\r\n    return(\r\n        <div className=\"nav\">\r\n            <div className=\"logo\"><img src=\"logo.png\"></img><p>GRAND HOTEL</p></div>\r\n            <div className=\"links\">\r\n               <NavLink to=\"/rooms\">Rooms</NavLink>\r\n               <NavLink to=\"/booking\">Booking</NavLink>\r\n               <NavLink to=\"/visitor\">Visitors</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport './select.style.css'\r\n\r\nconst Select = ({data,name,className,onChange,title,id, ...rest})=>{\r\n    return(\r\n       <div className={className}>\r\n            <label htmlFor={name}>{title}</label>\r\n           <select className='select' name={name} onChange={onChange} {...rest}>\r\n            <option value=\"\"  />\r\n           {data.map((e)=>{\r\n           return <option key={e.id} value={e[id]}>{e[id]}</option>\r\n           })}\r\n       </select>\r\n       </div>\r\n       \r\n    )\r\n}\r\n\r\n\r\nexport default Select;","import React,{useEffect} from 'react';\r\nimport Input from '../../components/input';\r\nimport Button from '../../components/Button';\r\nimport Select from '../../components/Select';\r\nimport {connect} from 'react-redux';\r\nimport {createBookings} from '../../actions'\r\nimport {postBookingThunk,getRoomsThunk,getVisitorsThunk,getBookingThunk,updateBookingThunk} from '../../thunk';\r\n\r\nconst CreateBooks = ({bookingData,getRooms,getVisitors,rooms,visitors,handleBooking,postBookings,getBooking,udpateBooks}) =>{\r\n  const { personName,personId,roomNumber,bookedAt,id} = bookingData;\r\n\r\n  useEffect(()=>{\r\n    getRooms()\r\n    getVisitors()\r\n  },[])\r\n \r\n\r\n  const handleBooks = (e)=>{\r\n    handleBooking(e,bookingData,visitors)\r\n  }\r\n\r\n  const handleSubmit = () =>{\r\n    postBookings(bookingData)\r\n    getBooking()\r\n  }\r\n\r\n  const update = () =>{\r\n    udpateBooks(bookingData,id)\r\n  }\r\n \r\n\r\n    return (\r\n        <div className='create_book'>\r\n          <p> NEW Booking</p>\r\n          <div className=\"imput_books\">\r\n          <Select data={visitors} title=\"Person Name\" name={\"personName\"} id={'personName'} value={personName} onChange={handleBooks}    className={\"select_all\"}/>\r\n          <Input span={\"Person ID\"}  disabled={'disabled'} className={\"input_all\"} onChange={handleBooks} value={personId} />\r\n          <Select data={rooms} title=\"Rooms Id\" name={'roomNumber'} onChange={handleBooks} id={'roomId'} value={roomNumber} className={\"select_all\"}/>\r\n          <Input span={\"Date\"} type={'date'} name={'bookedAt'} className={\"input_all\"} value={bookedAt} onChange={handleBooks}/>\r\n          <Button name={id ? 'Update' : 'Book'}  myClassName={\"button_all\"} onClick={()=>{ return id ? update(bookingData,id) : handleSubmit() }}/>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = ({bookingPage,roomsPage,visitorsPage}) =>{\r\n  return{\r\n     bookingData : bookingPage.bookingData,\r\n     rooms : roomsPage.rooms,\r\n     visitors : visitorsPage.visitors,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    \r\n      handleBooking : (event, bookingData,personId) =>{\r\n          dispatch(createBookings(event,bookingData,personId))\r\n      },\r\n      postBookings : (data) =>{\r\n          dispatch(postBookingThunk(data))\r\n      },\r\n      udpateBooks : (id,data) =>{\r\n          dispatch(updateBookingThunk(id,data))\r\n      },\r\n      getBooking : ()=>{\r\n        dispatch(getBookingThunk())\r\n      },\r\n      getRooms: () => {\r\n           dispatch(getRoomsThunk())\r\n       },\r\n       getVisitors : () =>{\r\n        dispatch(getVisitorsThunk())\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateBooks);\r\n\r\n\r\n","import React,{useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {updateBookings} from '../../actions'\r\nimport {getBookingThunk,deleteBookingThunk} from '../../thunk/';\r\nimport Button from '../../components/Button';\r\n\r\n\r\nconst BooksTable = ({booking,getBooking,updateBookings,removeBookings}) =>{\r\n  \r\nuseEffect(()=>{\r\n  getBooking()\r\n},[])\r\nconsole.log(\"TCL: BooksTable -> booking\", booking)\r\n\r\n\r\nconst update =(id) =>{\r\n  updateBookings(id)\r\n}\r\n\r\nconst deleteBookings = (id)=>{\r\n  removeBookings(id)\r\n  getBooking()\r\n}\r\n    return(\r\n      <div className=\"books_info\">\r\n         <table>\r\n           <thead>\r\n           <tr>\r\n                <th>#</th>\r\n                <th>Person Name</th>\r\n                <th>Room ID</th>\r\n                <th>Booked</th>\r\n                <th>Person ID</th>\r\n                <th>Edit</th>\r\n                <th>Delete</th>\r\n           </tr>\r\n           </thead>\r\n            <tbody>\r\n            {booking.map((e,i)=>{\r\n              return <tr key={e.id}>\r\n                <td>{i+1}</td>\r\n                <td> {e.personName} </td>\r\n                <td> {e.roomNumber} </td>\r\n                <td> {e.bookedAt} </td>\r\n                <td> {e.personId} </td> \r\n                 <td><Button name={'edit'} onClick={()=>update(e.id)} /></td>\r\n                <td><Button name={'delete'} onClick={()=>deleteBookings(e.id)} /></td>\r\n              </tr>\r\n            })}\r\n            </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({bookingPage}) =>{\r\n  return {\r\n      booking : bookingPage.bookings\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n       getBooking: () => {\r\n           dispatch(getBookingThunk())\r\n       },\r\n       removeBookings : (id) =>{\r\n        dispatch(deleteBookingThunk(id))\r\n    },\r\n    updateBookings : (id)=>{\r\n      dispatch(updateBookings(id))\r\n    }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(BooksTable);","import React from 'react';\r\nimport CreateBooks from './CreateBook';\r\nimport './booking.style.css'\r\nimport BooksTable from './BooksTable';\r\n\r\n\r\n\r\nconst Bookings = () => {\r\n   \r\n    return (\r\n     <div className=\"books\">\r\n         <CreateBooks/>\r\n         <BooksTable/>\r\n     </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default Bookings;","import React, { useEffect } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Input from '../../components/input';\r\nimport Button from '../../components/Button';\r\nimport {postVisitorsThunk,updateVisitorsThunk,getVisitorsThunk} from '../../thunk';\r\nimport {createVisitors,resetViisitors} from '../../actions';\r\nimport {personDataExample} from '../../constant/constant'\r\n\r\n\r\nconst CreateVisitors = ({personData,handleVisitors,postVisitors,udpateVisitors,getVisitors,resetVisitorsInput}) =>{\r\n\r\n  const {personName,personId,cardNumber,createdDate,id} = personData;\r\n  \r\n  const handleInputs = (e) =>{\r\n     handleVisitors(e,personData)\r\n  }\r\n\r\n  const handleSubmit = () =>{\r\n    postVisitors(personData)\r\n    getVisitors()\r\n    resetVisitorsInput(personDataExample)\r\n  }\r\n\r\n  const update = (id,personData) =>{\r\n    udpateVisitors(id,personData)\r\n    getVisitors()\r\n    resetVisitorsInput(personDataExample)\r\n  }\r\n\r\n    return (\r\n        <div className='create_book'>\r\n          <p>Add New Person</p>\r\n          <div className=\"imput_books\">\r\n          <Input span={\"Person Name\"} name=\"personName\" className={\"input_all\"} value={personName} onChange={handleInputs} />\r\n          <Input span={\"Person ID\"} name='personId' className={\"input_all\"} value={personId} onChange={handleInputs}/>\r\n          <Input span={\"Card Number\"} name='cardNumber' className={\"input_all\"} value={cardNumber} onChange={handleInputs}/>\r\n          <Input span={\"Date\"} type={'date'} name='createdDate' className={\"input_all\"} value={createdDate} onChange={handleInputs}/>\r\n          <Button myClassName={\"button_all\"} name={ id ? 'Update' : 'Save'} onClick={ ()=>{return id ? update(id,personData) : handleSubmit() } }/>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({visitorsPage}) =>{\r\n  return{\r\n     visitors : visitorsPage.visitors,\r\n     personData : visitorsPage.personData\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    \r\n      handleVisitors : (event, personData) =>{\r\n          dispatch(createVisitors(event,personData))\r\n      },\r\n      postVisitors : (data) =>{\r\n          dispatch(postVisitorsThunk(data))\r\n      },\r\n      udpateVisitors : (id,data) =>{\r\n          dispatch(updateVisitorsThunk(id,data))\r\n      },\r\n      getVisitors : ()=>{\r\n        dispatch(getVisitorsThunk())\r\n      },\r\n      resetVisitorsInput : (data) =>{\r\n        dispatch(resetViisitors(data))\r\n      }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateVisitors);\r\n","import React,{useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {getVisitorsThunk,removeVisitorsThunk} from '../../thunk';\r\nimport {updateVisitors} from '../../actions'\r\nimport Button from '../../components/Button';\r\n\r\n\r\nconst VisitorsTable = ({visitors,getVisitors,removeVisitor,updatedVisitors}) =>{\r\n  useEffect(()=>{\r\n            getVisitors()\r\n        },[visitors])\r\n\r\n  const deleteVisitor = (id)=>{\r\n    removeVisitor(id)\r\n  }\r\n\r\n  const update =(id) =>{\r\n    updatedVisitors(id)\r\n    getVisitors()\r\n  }\r\n    return(\r\n      <div className=\"books_info\">\r\n         <table>\r\n           <thead>\r\n           <tr>\r\n                <th>#</th>\r\n                <th>Person Name</th>\r\n                <th>Person ID</th>\r\n                <th>Date</th>\r\n                <th>Card Number</th>\r\n                <th>Edit</th>\r\n                <th>Delete</th>\r\n           </tr>\r\n           </thead>\r\n            <tbody>\r\n            {visitors.map((e,i)=>{\r\n              return <tr key={e.id}>\r\n                <td>{i+1}</td>\r\n                <td> {e.personName} </td>\r\n                <td> {e.personId} </td>\r\n                <td> {e.createdDate} </td>\r\n                <td> {e.cardNumber} </td>\r\n                <td><Button name={'edit'} onClick={()=>update(e.id)} /></td>\r\n                <td><Button name={'delete'} onClick={()=>deleteVisitor(e.id)} /></td>\r\n              </tr>\r\n            })}\r\n            </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({visitorsPage}) =>{\r\n  return{\r\n     visitors : visitorsPage.visitors,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n      getVisitors : () =>{\r\n          dispatch(getVisitorsThunk())\r\n      },\r\n      removeVisitor : (id) =>{\r\n        dispatch(removeVisitorsThunk(id))\r\n    },\r\n    updatedVisitors : (id)=>{\r\n      dispatch(updateVisitors(id))\r\n    }\r\n  }\r\n}\r\n\r\nexport default React.memo(connect(mapStateToProps,mapDispatchToProps)(VisitorsTable))  ;","import React from 'react';\r\nimport CreateVisitors from './CreateVisitor';\r\nimport VisitorsTable from './Visitors.table';\r\n\r\n\r\n\r\n\r\nconst Visitors = () => {\r\n    return (\r\n     <div className=\"books\">\r\n         <CreateVisitors  />\r\n         <VisitorsTable />\r\n     </div>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\nexport default Visitors ;","import React from 'react';\nimport './App.css';\nimport Rooms from './screens/Rooms';\nimport Nav from './screens/Nav';\nimport Bookings from './screens/Bookings';\nimport {Route} from 'react-router-dom';\nimport {HashRouter} from \"react-router-dom\"\nimport Visitors from './screens/Visitors';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <HashRouter>\n       <Nav/>\n      <Route  path='/rooms'  render={()=> <Rooms/>}/>\n      <Route  path='/booking'  render={()=> <Bookings/>}/>\n      <Route  path='/visitor'  render={()=> <Visitors/>}/>\n       </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n  gettingStatus : false,\r\n  status        : {\r\n    rooms: 0,\r\n    booking: 0,\r\n    visitors: 0\r\n  },\r\n  rooms :[],\r\n  roomsData : {\r\n    balcony : false,\r\n    floor : '',\r\n    beds : '',\r\n    roomId : '',\r\n    bookedAt : new Date().toLocaleDateString()\r\n  }\r\n};\r\n\r\nexport default function roomsReducer(state = initialState, action) {\r\n  switch(action.type) {\r\n    \r\n    case 'GET_STATUS_REQUEST': \r\n      return {\r\n        ...state,\r\n        gettingStatus: true,\r\n      }\r\n    case 'GET_STATUS_SUCCESS': \r\n    return {\r\n      ...state,\r\n      gettingStatus: false,\r\n      status: action.payload\r\n    }\r\n    case 'GET_STATUS_FAILURE': \r\n    return {\r\n      ...state,\r\n      gettingStatus: true,\r\n    }\r\n    case \"GET_ROOMS\" :\r\n      return{\r\n        ...state,\r\n        rooms : action.payload\r\n      }\r\n      case \"CREATE_ROOMS\":\r\n        return{\r\n            ...state,\r\n            roomsData : action.payload,\r\n        }\r\n      case \"REMOVE_ROOMS\":\r\n        const newRooms = state.rooms.filter(el =>{\r\n            return el.id !== action.payload\r\n        })\r\n        return{\r\n            ...state,\r\n          rooms : newRooms\r\n        }\r\n    case \"UPDATE_ROOMS\":\r\n        const findEvent = state.rooms.find((event) => {\r\n            return event.id === action.payload\r\n        });\r\n        return {\r\n            ...state,\r\n            roomsData: findEvent\r\n        }\r\n        case \"RESET_ROOMS\":\r\n          return{\r\n            ...state,\r\n            roomsData : action.payload\r\n          }\r\n    default:\r\n      return state;\r\n  }\r\n}","const initalState ={\r\n    personData : {\r\n        personName : '',\r\n        personId : '',\r\n        cardNumber : '',\r\n        createdDate : ''\r\n    },\r\n    visitors : []\r\n}\r\n\r\nexport default function visitorReducer  (state = initalState, action) {\r\n    switch (action.type) {\r\n        case \"CREATE_VISITORS\":\r\n        return{\r\n            ...state,\r\n            personData : action.payload,\r\n        }\r\n        case \"GET_VISITORS\":\r\n            return {\r\n                ...state,\r\n                visitors : [...action.payload]\r\n            }\r\n            case \"REMOVE_VISITORS\":\r\n                const newVisitors = state.visitors.filter(el =>{\r\n                    return el.id !== action.payload\r\n                })\r\n                return{\r\n                    ...state,\r\n                  visitors : newVisitors\r\n                }\r\n            case \"UPDATE_VISITORS\":\r\n                const findEvent = state.visitors.find((event) => {\r\n                    return event.id === action.payload\r\n                });\r\n                return {\r\n                    ...state,\r\n                    personData: findEvent\r\n                };\r\n                case \"RESET_VISITORS\":\r\n                    return{\r\n                      ...state,\r\n                      personData : action.payload\r\n                    };\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    getBookingStatus: false,\r\n    postBookingStatus: true,\r\n    bookings: [],\r\n    bookingData : {\r\n        personName : '',\r\n        roomNumber : '',\r\n        personId : '',\r\n        bookedAt : '',\r\n        roomId : '00'\r\n      }\r\n  };\r\n  \r\n  export default function bookingReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n      case 'GET_BOOKING_SUCCSESS':\r\n      return {\r\n        ...state,\r\n        getBookingStatus: true,\r\n        bookings: action.payload\r\n      }\r\n      case 'GET_BOOKING_FAILURE':\r\n      return {\r\n        ...state,\r\n        getBookingStatus: false,\r\n      }\r\n      case 'POST_BOOKING_SUCCSESS':\r\n      return {\r\n        ...state,\r\n        postBookingStatus: true,\r\n        postBooking: action.payload\r\n      }\r\n      case 'POST_BOOKING_FAILURE':\r\n      return {\r\n        ...state,\r\n        postBookingStatus: false\r\n      }\r\n        case \"CREATE_BOOKINGS\":\r\n          return{\r\n              ...state,\r\n              bookingData : action.payload,\r\n          }\r\n        case \"REMOVE_BOOKINGS\":\r\n          const newBookings = state.rooms.filter(el =>{\r\n              return el.id !== action.payload\r\n          })\r\n          return{\r\n              ...state,\r\n            bookings : newBookings\r\n          }\r\n      case \"UPDATE_BOOKINGS\":\r\n          const findEvent = state.bookings.find((event) => {\r\n              return event.id === action.payload\r\n          });\r\n          return {\r\n              ...state,\r\n              bookingData: findEvent\r\n          }\r\n      default:\r\n        return state;\r\n    }\r\n  }","import {combineReducers} from 'redux';\r\nimport roomsReducer from './rooms.reduce';\r\nimport visitorsReducer from './visitors.reducer';\r\nimport bookingReducer from './bookings.reducer'\r\n\r\nexport default combineReducers({\r\n   roomsPage : roomsReducer,\r\n   visitorsPage : visitorsReducer,\r\n   bookingPage : bookingReducer\r\n})\r\n\r\n","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport reducer from '../reducers/';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    compose(applyMiddleware(...middleware))\r\n    )\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './store/store';\n\nReactDOM.render(\n           <Provider store={store}>\n               <App store={store} />\n           </Provider>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}